{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","shortid","require","App","cachedPredicates","localStorage","getItem","split","React","useState","predicates","setPredicates","operations","hostUrl","setHostUrl","storeId","setStoreId","id","generate","predicate","operation","value","filters","setFilters","path","level","target","outgoings","setOutgoings","incomings","setIncomings","jsonResponse","setJsonResponse","showJson","setShowJson","showConnectionInfo","setShowConnectionInfo","showFilters","setShowFilters","showOutgoing","setShowOutgoing","showIncoming","setShowIncoming","showAggregates","setShowAggregates","countAggregate","setCountAggregate","handleFilterFormChange","e","currentFilter","map","f","handleDeleteFilterForm","filter","handleTypeaheadFilterSelection","selected","typeahead","length","handleTypeaheadFilterChange","val","handleOutgoingFilterFormChange","currentOutgoing","o","handleOutgoingDeleteFilterForm","handleOutgoingDeleteForm","handleOutgoingTypeaheadFilterSelection","handleOutgoingTypeaheadFilterChange","addOutgoingFilter","updatedOutgoing","addIncomingFilter","updatedIncoming","i","handleIncomingFilterFormChange","currentIncoming","handleIncomingDeleteFilterForm","handleIncomingDeleteForm","handleIncomingTypeaheadFilterSelection","handleIncomingTypeaheadFilterChange","anyValidOutgoings","outgoing","some","anyValidIncomings","incoming","tryParseInt","str","retValue","isNaN","parseInt","runQuery","continuation","a","async","console","log","body","op","parseFloat","newOutgoing","push","newIncoming","aggregates","type","axios","get","encodeURIComponent","post","response","data","values","className","Jumbotron","onClick","Collapse","in","Form","Group","controlId","Label","Control","placeholder","onChange","Button","variant","includes","setItem","filterGroups","InputGroup","labelKey","multiple","options","allowNew","onInputChange","FormControl","aria-label","renderFilters","outgoingGroups","renderOutgoings","incomingGroups","renderIncomings","Check","checked","name","label","src","onSelect","nodeToUpdate","namespace","parentNode","j","JSON","parse","stringify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f5e456c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {Typeahead} from 'react-bootstrap-typeahead';\r\nimport logo from './logo.svg';\r\nimport ReactJson from 'react-json-view'\r\nimport './App.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nconst shortid = require('shortid');\r\n\r\nfunction App() {\r\n  var cachedPredicates = localStorage.getItem('predicates');\r\n  if(cachedPredicates){\r\n    cachedPredicates = cachedPredicates.split(\",\");\r\n  }\r\n  const [predicates, setPredicates] = React.useState(cachedPredicates || ['type', 'id']);\r\n  const [operations, setOperations] = React.useState(['eq', 'ge', 'gt', 'le', 'lt', 'ne']);\r\n  const [hostUrl, setHostUrl] = React.useState(localStorage.getItem('hostUrl') || '');\r\n  const [storeId, setStoreId] = React.useState(localStorage.getItem('storeId') || '');\r\n  const [filters, setFilters] = React.useState([\r\n    {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }\r\n  ]);\r\n  const [outgoings, setOutgoings] = React.useState([\r\n    {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      level: 0,\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }\r\n  ]);\r\n  const [incomings, setIncomings] = React.useState([\r\n    {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      level: 0,\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }\r\n  ]);\r\n  const [jsonResponse, setJsonResponse] = React.useState({});\r\n  const [showJson, setShowJson] = React.useState(false);\r\n  const [showTable, setShowTable] = React.useState(false);\r\n  const [showConnectionInfo, setShowConnectionInfo] = React.useState(true);\r\n  const [showFilters, setShowFilters] = React.useState(true);\r\n  const [showOutgoing, setShowOutgoing] = React.useState(false);\r\n  const [showIncoming, setShowIncoming] = React.useState(false);\r\n  const [values, setValues] = React.useState([]);\r\n  const [showAggregates, setShowAggregates] = React.useState(false);\r\n  const [countAggregate, setCountAggregate] = React.useState(false);\r\n \r\n\r\n  function handleFilterFormChange(e, currentFilter) {\r\n    setFilters(filters.map(f => f.id === currentFilter.id ? {...f, value: e.target && e.target.value} : f));\r\n  } \r\n\r\n  function handleDeleteFilterForm(currentFilter) {\r\n    setFilters(filters.filter(f => f.id !== currentFilter.id));\r\n  }\r\n\r\n  function handleTypeaheadFilterSelection(selected, currentFilter, typeahead){\r\n    setFilters(filters.map(f => f.id === currentFilter.id ? {...f, [typeahead]: selected.length && selected[0]} : f));\r\n  }\r\n\r\n  function handleTypeaheadFilterChange(val, currentFilter, typeahead){\r\n    setFilters(filters.map(f => f.id === currentFilter.id ? {...f, [typeahead]: val} : f));\r\n  }\r\n\r\n  function renderFilters() {\r\n    var filterGroups = [];\r\n    for(var filter of filters) {\r\n      filterGroups.push(<InputGroup className=\"input-group\">\r\n      <Typeahead\r\n          labelKey=\"predicate\"\r\n          multiple={false}\r\n          options={predicates}\r\n          placeholder=\"Choose a predicate\"\r\n          className=\"Typeahead\"\r\n          value={filter.predicate}\r\n          allowNew={true}\r\n          onChange={((currentFilter) => (selected) => handleTypeaheadFilterSelection(selected, currentFilter, 'predicate'))(filter)}\r\n          onInputChange={((currentFilter) => (val) => handleTypeaheadFilterChange(val, currentFilter, 'predicate'))(filter)}\r\n        />\r\n        <Typeahead\r\n          labelKey=\"operation\"\r\n          multiple={false}\r\n          options={operations}\r\n          placeholder=\"Choose an operation\"\r\n          className=\"Typeahead\"\r\n          value={filter.operation}\r\n          onChange={((currentFilter) => (selected) => handleTypeaheadFilterSelection(selected, currentFilter, 'operation'))(filter)}\r\n          onInputChange={((currentFilter) => (val) => handleTypeaheadFilterChange(val, currentFilter, 'operation'))(filter)}\r\n        ></Typeahead>\r\n        <FormControl\r\n          placeholder=\"value\"\r\n          aria-label=\"value\"\r\n          value={filter.value}\r\n          onChange={((currentFilter) => (e) => handleFilterFormChange(e, currentFilter))(filter)}\r\n        />\r\n        <Button variant=\"danger\" onClick={((currentFilter) => () => handleDeleteFilterForm(currentFilter))(filter)}>X</Button>\r\n    </InputGroup>)\r\n    }\r\n    return <>\r\n    {filterGroups}\r\n    </>;\r\n  }\r\n\r\n  function handleOutgoingFilterFormChange(e, currentOutgoing, currentFilter) {\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, value: e.target && e.target.value}\r\n        : f) }}\r\n      : o))\r\n  } \r\n\r\n  function handleOutgoingDeleteFilterForm(currentOutgoing, currentFilter) {\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.filter(f => f.id !== currentFilter.id)}}\r\n      : o))\r\n  }\r\n\r\n  function handleOutgoingDeleteForm(currentOutgoing) {\r\n    setOutgoings(outgoings.filter(o => o.id !== currentOutgoing.id));\r\n  }\r\n\r\n  function handleOutgoingTypeaheadFilterSelection(selected, currentOutgoing, currentFilter, typeahead){\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: selected.length && selected[0]}\r\n        : f) }} \r\n      : o));\r\n  }\r\n\r\n  function handleOutgoingTypeaheadFilterChange(val, currentOutgoing, currentFilter, typeahead){\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: val}\r\n        : f) }}\r\n      : o));\r\n  }\r\n\r\n  function renderOutgoings() {\r\n    var outgoingGroups = [];\r\n    for(var outgoing of outgoings) {\r\n      var filterGroups = [];\r\n      if (!outgoing.target) continue;\r\n      for(var filter of outgoing.target.filters) {\r\n        filterGroups.push(<InputGroup className=\"input-group\">\r\n          <Typeahead\r\n              labelKey=\"predicate\"\r\n              multiple={false}\r\n              options={predicates}\r\n              placeholder=\"Choose a predicate\"\r\n              className=\"Typeahead\"\r\n              value={filter.predicate}\r\n              allowNew={true}\r\n              onChange={((currentOutgoing, currentFilter) =>\r\n                (selected) => handleOutgoingTypeaheadFilterSelection(selected, currentOutgoing, currentFilter, 'predicate'))(outgoing, filter)}\r\n              onInputChange={((currentOutgoing, currentFilter) =>\r\n                (val) => handleOutgoingTypeaheadFilterChange(val, currentOutgoing, currentFilter, 'predicate'))(outgoing, filter)}\r\n            />\r\n            <Typeahead\r\n              labelKey=\"operation\"\r\n              multiple={false}\r\n              options={operations}\r\n              placeholder=\"Choose an operation\"\r\n              className=\"Typeahead\"\r\n              value={filter.operation}\r\n              onChange={((currentOutgoing, currentFilter) =>\r\n                (selected) => handleOutgoingTypeaheadFilterSelection(selected, currentOutgoing, currentFilter, 'operation'))(outgoing, filter)}\r\n              onInputChange={((currentOutgoing, currentFilter) =>\r\n                (val) => handleOutgoingTypeaheadFilterChange(val, currentOutgoing, currentFilter, 'operation'))(outgoing, filter)}\r\n            ></Typeahead>\r\n            <FormControl\r\n              placeholder=\"value\"\r\n              aria-label=\"value\"\r\n              value={filter.value}\r\n              onChange={((currentOutgoing, currentFilter) => (e) => handleOutgoingFilterFormChange(e, currentOutgoing, currentFilter))(outgoing, filter)}\r\n            />\r\n            <Button variant=\"danger\" onClick={((currentOutgoing, currentFilter) => () => handleOutgoingDeleteFilterForm(currentOutgoing, currentFilter))(outgoing, filter)}>X</Button>\r\n          </InputGroup>);\r\n      }\r\n      outgoingGroups.push(<div className=\"section\">\r\n      <Form.Label>\r\n        Path\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"path\"\r\n        aria-label=\"path\"\r\n        value={outgoing.path}\r\n        onChange={((currentOutgoing) => (e) => setOutgoings(outgoings.map(o => o.id === currentOutgoing.id ? {...o, path: e.target && e.target.value} : o)))(outgoing)}\r\n      />\r\n      <Form.Label>\r\n        Level\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"level\"\r\n        aria-label=\"level\"\r\n        value={outgoing.level}\r\n        onChange={((currentOutgoing) => (e) => setOutgoings(outgoings.map(o => o.id === currentOutgoing.id ? {...o, level: e.target && e.target.value} : o)))(outgoing)}\r\n      />\r\n      <Form.Label>\r\n        Filters:\r\n      </Form.Label>\r\n      {filterGroups}\r\n      <div className=\"action-button\">\r\n            <Button variant=\"info\" onClick={((currentOutgoing) => () => addOutgoingFilter(currentOutgoing.id))(outgoing)}>Add Filter</Button>\r\n            <Button variant=\"danger\" onClick={((currentOutgoing) => () => handleOutgoingDeleteForm(currentOutgoing))(outgoing)}>Remove</Button>\r\n        </div>\r\n      </div>);\r\n    }\r\n    return <>\r\n    {outgoingGroups}\r\n    </>;\r\n  }\r\n\r\n  function addFilter(){\r\n    setFilters([...filters, {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }]);\r\n  }\r\n\r\n  function addOutgoing(){\r\n    setOutgoings([...outgoings, {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }]);\r\n  }\r\n\r\n  function addOutgoingFilter(id){\r\n    var updatedOutgoing = outgoings.filter(o => o.id === id)[0];\r\n    updatedOutgoing.target.filters = [...updatedOutgoing.target.filters, {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }];\r\n    setOutgoings(outgoings.map(o => o.id === id ? updatedOutgoing : o));\r\n  }\r\n\r\n  function addIncoming(){\r\n    setIncomings([...incomings, {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }]);\r\n  }\r\n\r\n  function addIncomingFilter(id){\r\n    var updatedIncoming = incomings.filter(i => i.id === id)[0];\r\n    updatedIncoming.target.filters = [...updatedIncoming.target.filters, {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }];\r\n    setIncomings(incomings.map(i => i.id === id ? updatedIncoming : i));\r\n  }\r\n\r\n  function handleIncomingFilterFormChange(e, currentIncoming, currentFilter) {\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, value: e.target && e.target.value}\r\n        : f) }}\r\n      : o))\r\n  } \r\n\r\n  function handleIncomingDeleteFilterForm(currentIncoming, currentFilter) {\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.filter(f => f.id !== currentFilter.id)}}\r\n      : o))\r\n  }\r\n\r\n  function handleIncomingDeleteForm(currentIncoming) {\r\n    setIncomings(incomings.filter(o => o.id !== currentIncoming.id));\r\n  }\r\n\r\n  function handleIncomingTypeaheadFilterSelection(selected, currentIncoming, currentFilter, typeahead){\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: selected.length && selected[0]}\r\n        : f) }} \r\n      : o));\r\n  }\r\n\r\n  function handleIncomingTypeaheadFilterChange(val, currentIncoming, currentFilter, typeahead){\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: val}\r\n        : f) }}\r\n      : o));\r\n  }\r\n\r\n  function renderIncomings() {\r\n    var incomingGroups = [];\r\n    for(var incoming of incomings) {\r\n      var filterGroups = [];\r\n      if (!incoming.target) continue;\r\n      for(var filter of incoming.target.filters) {\r\n        filterGroups.push(<InputGroup className=\"input-group\">\r\n          <Typeahead\r\n              labelKey=\"predicate\"\r\n              multiple={false}\r\n              options={predicates}\r\n              placeholder=\"Choose a predicate\"\r\n              className=\"Typeahead\"\r\n              value={filter.predicate}\r\n              allowNew={true}\r\n              onChange={((currentIncoming, currentFilter) =>\r\n                (selected) => handleIncomingTypeaheadFilterSelection(selected, currentIncoming, currentFilter, 'predicate'))(incoming, filter)}\r\n              onInputChange={((currentIncoming, currentFilter) =>\r\n                (val) => handleIncomingTypeaheadFilterChange(val, currentIncoming, currentFilter, 'predicate'))(incoming, filter)}\r\n            />\r\n            <Typeahead\r\n              labelKey=\"operation\"\r\n              multiple={false}\r\n              options={operations}\r\n              placeholder=\"Choose an operation\"\r\n              className=\"Typeahead\"\r\n              value={filter.operation}\r\n              onChange={((currentIncoming, currentFilter) =>\r\n                (selected) => handleIncomingTypeaheadFilterSelection(selected, currentIncoming, currentFilter, 'operation'))(incoming, filter)}\r\n              onInputChange={((currentIncoming, currentFilter) =>\r\n                (val) => handleIncomingTypeaheadFilterChange(val, currentIncoming, currentFilter, 'operation'))(incoming, filter)}\r\n            ></Typeahead>\r\n            <FormControl\r\n              placeholder=\"value\"\r\n              aria-label=\"value\"\r\n              value={filter.value}\r\n              onChange={((currentIncoming, currentFilter) => (e) => handleIncomingFilterFormChange(e, currentIncoming, currentFilter))(incoming, filter)}\r\n            />\r\n            <Button variant=\"danger\" onClick={((currentIncoming, currentFilter) => () => handleIncomingDeleteFilterForm(currentIncoming, currentFilter))(incoming, filter)}>X</Button>\r\n          </InputGroup>);\r\n      }\r\n      incomingGroups.push(<div className=\"section\">\r\n      <Form.Label>\r\n        Path\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"path\"\r\n        aria-label=\"path\"\r\n        value={incoming.path}\r\n        onChange={((currentIncoming) => (e) => setIncomings(outgoings.map(o => o.id === currentIncoming.id ? {...o, path: e.target && e.target.value} : o)))(incoming)}\r\n      />\r\n      <Form.Label>\r\n        Level\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"level\"\r\n        aria-label=\"level\"\r\n        value={incoming.level}\r\n        onChange={((currentIncoming) => (e) => setIncomings(outgoings.map(o => o.id === currentIncoming.id ? {...o, level: e.target && e.target.value} : o)))(incoming)}\r\n      />\r\n      <Form.Label>\r\n        Filters:\r\n      </Form.Label>\r\n      {filterGroups}\r\n      <div className=\"action-button\">\r\n            <Button variant=\"info\" onClick={((currentIncoming) => () => addIncomingFilter(currentIncoming.id))(incoming)}>Add Filter</Button>\r\n            <Button variant=\"danger\" onClick={((currentIncoming) => () => handleIncomingDeleteForm(currentIncoming))(incoming)}>Remove</Button>\r\n        </div>\r\n      </div>);\r\n    }\r\n    return <>\r\n    {incomingGroups}\r\n    </>;\r\n  }\r\n\r\n  async function setConnection() {\r\n    console.log(hostUrl);\r\n    const response =\r\n      await axios.get(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/predicates`);\r\n    console.log(response.data);\r\n    var predicates = response.data.values;\r\n    if(!predicates.includes('id')){\r\n      predicates = [...predicates, 'id'];\r\n    }\r\n    setPredicates(predicates);\r\n    localStorage.setItem('hostUrl', hostUrl);\r\n    localStorage.setItem('storeId', storeId);\r\n    localStorage.setItem('predicates', predicates);\r\n  }\r\n\r\n  function anyValidOutgoings() {\r\n    for(var outgoing of outgoings) {\r\n      if(outgoing.target && outgoing.target.filters && outgoing.target.filters.some((filter) => filter.predicate && filter.operation && filter.value)) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function anyValidIncomings() {\r\n    for(var incoming of incomings) {\r\n      if(incoming.target && incoming.target.filters && incoming.target.filters.some((filter) => filter.predicate && filter.operation && filter.value)) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function tryParseInt(str,defaultValue = 0) {\r\n    var retValue = defaultValue;\r\n    if(str) {\r\n      if (!isNaN(str)) {\r\n          retValue = parseInt(str);\r\n      }\r\n    }\r\n    return retValue;\r\n  }\r\n\r\n  function tryParseFloat(str,defaultValue = 0) {\r\n    var retValue = defaultValue;\r\n    if(str) {\r\n      if (!isNaN(str)) {\r\n          retValue = parseFloat(str);\r\n      }\r\n    }\r\n    return retValue;\r\n  }\r\n  \r\n\r\n\r\n  async function runQuery(e, continuation) {\r\n    console.log(filters);\r\n    console.log(outgoings);\r\n    var body = { filter: {}};\r\n    var id = null;\r\n    for(var filter of filters){\r\n      if(filter.predicate === 'id' && filter.operation === 'eq' && filter.value) {\r\n        id = filter.value;\r\n      }\r\n      body.filter[filter.predicate] = { \r\n        op: filter.operation,\r\n        value: filter.value\r\n      }\r\n      // convert strings to bools\r\n      if (body.filter[filter.predicate].value === \"true\") {\r\n        body.filter[filter.predicate].value = true;\r\n      }\r\n      if (body.filter[filter.predicate].value === \"false\") {\r\n        body.filter[filter.predicate].value = false;\r\n      }\r\n      if (!isNaN(parseFloat(body.filter[filter.predicate].value))) {\r\n        body.filter[filter.predicate].value = parseFloat(body.filter[filter.predicate].value);\r\n      }\r\n    }\r\n\r\n    if (anyValidOutgoings()){\r\n      body.outgoing = [];\r\n      for(var outgoing of outgoings) {\r\n        var newOutgoing = {\r\n          path: outgoing.path,\r\n          level: outgoing.level,\r\n          target: {\r\n            filter: {}\r\n          }\r\n        };\r\n        if (outgoing.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq' && f.value).length) {\r\n            delete newOutgoing.target.filter;\r\n            newOutgoing.target = {id: outgoing.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq')[0].value}\r\n        } \r\n        else {\r\n          for(var filter of outgoing.target.filters) {\r\n            newOutgoing.target.filter[filter.predicate] = { \r\n              op: filter.operation,\r\n              value: filter.value\r\n            }\r\n            // convert strings to bools\r\n            if (newOutgoing.target.filter[filter.predicate].value === \"true\") {\r\n              newOutgoing.target.filter[filter.predicate].value = true;\r\n            }\r\n            if (newOutgoing.target.filter[filter.predicate].value === \"false\") {\r\n              newOutgoing.target.filter[filter.predicate].value = false;\r\n            }\r\n            if (!isNaN(parseFloat(newOutgoing.target.filter[filter.predicate].value))) {\r\n              newOutgoing.target.filter[filter.predicate].value = parseFloat(newOutgoing.target.filter[filter.predicate].value);\r\n            }\r\n            newOutgoing.level = tryParseInt(newOutgoing.level);\r\n          }\r\n        }\r\n        body.outgoing.push(newOutgoing)\r\n      }\r\n    }\r\n\r\n    if (anyValidIncomings()){\r\n      body.incoming = [];\r\n      for(var incoming of incomings) {\r\n        var newIncoming = {\r\n          path: incoming.path,\r\n          level: incoming.level,\r\n          target: {\r\n            filter: {}\r\n          }\r\n        };\r\n        if (incoming.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq' && f.value).length) {\r\n          delete newIncoming.target.filter;\r\n          newIncoming.target = {id: incoming.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq')[0].value}\r\n        }  \r\n        else {\r\n          for(var filter of incoming.target.filters) {\r\n            newIncoming.target.filter[filter.predicate] = { \r\n              op: filter.operation,\r\n              value: filter.value\r\n            }\r\n            // convert strings to bools\r\n            if (newIncoming.target.filter[filter.predicate].value === \"true\") {\r\n              newIncoming.target.filter[filter.predicate].value = true;\r\n            }\r\n            if (newIncoming.target.filter[filter.predicate].value === \"false\") {\r\n              newIncoming.target.filter[filter.predicate].value = false;\r\n            }\r\n            if (!isNaN(parseFloat(newIncoming.target.filter[filter.predicate].value))) {\r\n              newIncoming.target.filter[filter.predicate].value = parseFloat(newIncoming.target.filter[filter.predicate].value);\r\n            }\r\n            newIncoming.level = tryParseInt(newIncoming.level);\r\n          }\r\n        }\r\n        body.incoming.push(newIncoming)\r\n      }\r\n    }\r\n    if(continuation) {\r\n      body.continuation = jsonResponse['continuation'];\r\n    }\r\n    if(countAggregate) {\r\n      body.aggregates = [{type : \"count\"}];\r\n    }\r\n\r\n    console.log(body);\r\n    const response = id ? await axios.get(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/${id}`) :\r\n      await axios.post(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/query`, body);\r\n    console.log(response);\r\n    if(continuation){\r\n      setJsonResponse({...response.data, values: [...jsonResponse.values, ...response.data.values]});\r\n    } else {\r\n      setJsonResponse(response.data);\r\n    }\r\n    // setJsonResponse(JSON.stringify(response.data, null, 2));\r\n    setShowJson(true);\r\n    // setValues(response.data.values);\r\n  }\r\n\r\n  async function nodeSelected(selected) {\r\n    console.log(selected);\r\n    if(selected.name === 'id') {\r\n      var nodeToUpdate = jsonResponse;\r\n      for(var i of selected.namespace){\r\n        nodeToUpdate = nodeToUpdate[i];\r\n      }\r\n      const response = await axios.get(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/${encodeURIComponent(selected.value)}`);\r\n      console.log(response);\r\n      nodeToUpdate = {...nodeToUpdate, ...response.data};\r\n      for(var i = selected.namespace.length - 1; i >= 0; i--){\r\n        var parentNode = jsonResponse;\r\n        for(var j = 0; j < i; j++){\r\n          parentNode = parentNode[selected.namespace[j]];\r\n        }\r\n        parentNode[selected.namespace[i]] = nodeToUpdate;\r\n        nodeToUpdate = parentNode;\r\n      }\r\n      setJsonResponse(JSON.parse(JSON.stringify(nodeToUpdate)));\r\n    }\r\n    if(selected.namespace && selected.namespace.length === 1 && selected.namespace[0] === 'continuation'){\r\n      runQuery(null, jsonResponse.continuation);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Jumbotron>\r\n        <h1>\r\n          HexDb Query Builder\r\n        </h1>\r\n      </Jumbotron>\r\n      <div className=\"connection-info\">\r\n        <h5 className=\"section-title\" onClick={() => setShowConnectionInfo(!showConnectionInfo)}>\r\n          Connection Info\r\n        </h5>\r\n        <Collapse in={showConnectionInfo}>\r\n          <div>\r\n            <Form className=\"section\">\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Host Url</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"https://YourHost:YourPort\" value={hostUrl} onChange={(e) => setHostUrl(e.target.value)}/>\r\n                <Form.Label>Store Id</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"abc123\" value={storeId} onChange={(e) => setStoreId(e.target.value)}/>\r\n              </Form.Group>\r\n            </Form>\r\n            <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={setConnection}>Set Connection</Button>\r\n            </div>\r\n          </div>\r\n      </Collapse>\r\n      </div>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowFilters(!showFilters)}>\r\n        Filters\r\n      </h5>\r\n      <Collapse in={showFilters}>\r\n        <div>\r\n          {renderFilters()}\r\n          <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={addFilter}>Add Filter</Button>\r\n          </div>\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowOutgoing(!showOutgoing)}>\r\n        Outgoing\r\n      </h5>\r\n      <Collapse in={showOutgoing}>\r\n        <div>\r\n          {renderOutgoings()}\r\n          <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={addOutgoing}>Add Outgoing</Button>\r\n          </div>\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowIncoming(!showIncoming)}>\r\n        Incoming\r\n      </h5>\r\n      <Collapse in={showIncoming}>\r\n        <div>\r\n          {renderIncomings()}\r\n          <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={addIncoming}>Add Incoming</Button>\r\n          </div>\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowAggregates(!showAggregates)}>\r\n        Aggregates\r\n      </h5>\r\n      <Collapse in={showAggregates}>\r\n        <div className=\"section\">\r\n        <Form.Check \r\n          type='switch'\r\n          checked={countAggregate}\r\n          onChange={() => setCountAggregate(!countAggregate)}\r\n          id={`aggregates-count-switch`}\r\n          name='aggregates-switch'\r\n          label={`Count`}\r\n        />\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <div className=\"action-button\">\r\n        <Button variant=\"primary\" onClick={runQuery}>Run Query</Button>\r\n      </div>\r\n      <hr/>\r\n      <div>\r\n        <h5 className=\"section-title\" onClick={() => setShowJson(!showJson)}>\r\n          Query Response JSON\r\n        </h5>\r\n        <Collapse in={showJson}>\r\n          <div className=\"section query-response\">\r\n            <ReactJson src={jsonResponse} onSelect={nodeSelected}></ReactJson>\r\n            {/* <pre>{jsonResponse}</pre> */}\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n      <hr/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n// TODO: basic header, input for url for hexastore, input newline button, submit button, autocomplete, input for each filter, add outgoing and incoming sections, table/json result section\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}