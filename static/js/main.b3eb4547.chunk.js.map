{"version":3,"sources":["colorMapper.ts","App.js","serviceWorker.js","index.js"],"names":["colors","nodeTypeToColorMap","indexIntoColors","highlightColor","border","this","background","type","length","console","log","node","id","split","getColorsForType","highlight","shortid","require","App","cachedPredicates","localStorage","getItem","React","useState","predicates","setPredicates","operations","hostUrl","setHostUrl","storeId","setStoreId","generate","predicate","operation","value","filters","setFilters","path","level","target","outgoings","setOutgoings","incomings","setIncomings","jsonResponse","setJsonResponse","showJson","setShowJson","showGraph","setShowGraph","showConnectionInfo","setShowConnectionInfo","showFilters","setShowFilters","showOutgoing","setShowOutgoing","showIncoming","setShowIncoming","showAggregates","setShowAggregates","countAggregate","setCountAggregate","colorNodes","setColorNodes","handleFilterFormChange","e","currentFilter","map","f","handleDeleteFilterForm","filter","handleTypeaheadFilterSelection","selected","typeahead","handleTypeaheadFilterChange","val","handleOutgoingFilterFormChange","currentOutgoing","o","handleOutgoingDeleteFilterForm","handleOutgoingDeleteForm","handleOutgoingTypeaheadFilterSelection","handleOutgoingTypeaheadFilterChange","addOutgoingFilter","updatedOutgoing","addIncomingFilter","updatedIncoming","i","handleIncomingFilterFormChange","currentIncoming","handleIncomingDeleteFilterForm","handleIncomingDeleteForm","handleIncomingTypeaheadFilterSelection","handleIncomingTypeaheadFilterChange","anyValidOutgoings","outgoing","some","anyValidIncomings","incoming","tryParseInt","str","retValue","isNaN","parseInt","runQuery","continuation","a","async","body","op","parseFloat","newOutgoing","push","newIncoming","aggregates","axios","get","encodeURIComponent","post","response","newJson","data","values","newNodes","newEdges","newNode","label","title","ColorMapper","getColorForNode","toAdd","tryAddNodeToGraph","nodes","edges","setGraph","propertyKey","property","Array","isArray","item","from","to","graph","events","select","event","graphUpdate","JSON","parse","stringify","className","Jumbotron","onClick","Collapse","in","Form","Group","controlId","Label","Control","placeholder","onChange","Button","variant","includes","setItem","filterGroups","InputGroup","labelKey","multiple","options","allowNew","onInputChange","FormControl","aria-label","renderFilters","outgoingGroups","renderOutgoings","incomingGroups","renderIncomings","Check","checked","name","useColor","edge","setTimeout","redrawGraph","configure","enabled","showButton","layout","hierarchical","improvedLayout","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springConstant","springLength","damping","avoidOverlap","maxVelocity","minVelocity","solver","adaptiveTimestep","stabilization","fixed","shape","shapeProperties","interpolation","smooth","roundness","manipulation","interaction","dragNodes","dragView","style","width","height","src","onSelect","nodeToUpdate","namespace","parentNode","j","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3eb4547.chunk.js","sourcesContent":["export class ColorMapper {\r\n    \r\n    private colors: string[] = [\r\n    '#63b598', '#ce7d78', '#ea9e70', '#a48a9e', '#c6e1e8', '#648177' ,'#0d5ac1' ,\r\n    '#f205e6' ,'#1c0365' ,'#14a9ad' ,'#4ca2f9' ,'#a4e43f' ,'#d298e2' ,'#6119d0',\r\n    '#d2737d' ,'#c0a43c' ,'#f2510e' ,'#651be6' ,'#79806e' ,'#61da5e' ,'#cd2f00' ,\r\n    '#9348af' ,'#01ac53' ,'#c5a4fb' ,'#996635','#b11573' ,'#4bb473' ,'#75d89e' ,\r\n    '#2f3f94' ,'#2f7b99' ,'#da967d' ,'#34891f' ,'#b0d87b' ,'#ca4751' ,'#7e50a8' ,\r\n    '#c4d647' ,'#e0eeb8' ,'#11dec1' ,'#289812' ,'#566ca0' ,'#ffdbe1' ,'#2f1179' ,\r\n    '#935b6d' ,'#916988' ,'#513d98' ,'#aead3a', '#9e6d71', '#4b5bdc', '#0cd36d',\r\n    '#250662', '#cb5bea', '#228916', '#ac3e1b', '#df514a', '#539397', '#880977',\r\n    '#f697c1', '#ba96ce', '#679c9d', '#c6c42c', '#5d2c52', '#48b41b', '#e1cf3b',\r\n    '#5be4f0', '#57c4d8', '#a4d17a', '#225b8', '#be608b', '#96b00c', '#088baf',\r\n    '#f158bf', '#e145ba', '#ee91e3', '#05d371', '#5426e0', '#4834d0', '#802234',\r\n    '#6749e8', '#0971f0', '#8fb413', '#b2b4f0', '#c3c89d', '#c9a941', '#41d158',\r\n    '#fb21a3', '#51aed9', '#5bb32d', '#807fb', '#21538e', '#89d534', '#d36647',\r\n    '#7fb411', '#0023b8', '#3b8c2a', '#986b53', '#f50422', '#983f7a', '#ea24a3',\r\n    '#79352c', '#521250', '#c79ed2', '#d6dd92', '#e33e52', '#b2be57', '#fa06ec',\r\n    '#1bb699', '#6b2e5f', '#64820f', '#1c271', '#21538e', '#89d534', '#d36647',\r\n    '#7fb411', '#0023b8', '#3b8c2a', '#986b53', '#f50422', '#983f7a', '#ea24a3',\r\n    '#79352c', '#521250', '#c79ed2', '#d6dd92', '#e33e52', '#b2be57', '#fa06ec',\r\n    '#1bb699', '#6b2e5f', '#64820f', '#1c271', '#9cb64a', '#996c48', '#9ab9b7',\r\n    '#06e052', '#e3a481', '#0eb621', '#fc458e', '#b2db15', '#aa226d', '#792ed8',\r\n    '#73872a', '#520d3a', '#cefcb8', '#a5b3d9', '#7d1d85', '#c4fd57', '#f1ae16',\r\n    '#8fe22a', '#ef6e3c', '#243eeb', '#1dc18', '#dd93fd', '#3f8473', '#e7dbce',\r\n    '#421f79', '#7a3d93', '#635f6d', '#93f2d7', '#9b5c2a', '#15b9ee', '#0f5997',\r\n    '#409188', '#911e20', '#1350ce', '#10e5b1', '#fff4d7', '#cb2582', '#ce00be',\r\n    '#32d5d6', '#17232', '#608572', '#c79bc2', '#00f87c', '#77772a', '#6995ba',\r\n    '#fc6b57', '#f07815', '#8fd883', '#060e27', '#96e591', '#21d52e', '#d00043',\r\n    '#b47162', '#1ec227', '#4f0f6f', '#1d1d58', '#947002', '#bde052', '#e08c56',\r\n    '#28fcfd', '#bb09b', '#36486a', '#d02e29', '#1ae6db', '#3e464c', '#a84a8f',\r\n    '#911e7e', '#3f16d9', '#0f525f', '#ac7c0a', '#b4c086', '#c9d730', '#30cc49',\r\n    '#3d6751', '#fb4c03', '#640fc1', '#62c03e', '#d3493a', '#88aa0b', '#406df9',\r\n    '#615af0', '#4be47', '#2a3434', '#4a543f', '#79bca0', '#a8b8d4', '#00efd4',\r\n    '#7ad236', '#7260d8', '#1deaa7', '#06f43a', '#823c59', '#e3d94c', '#dc1c06',\r\n    '#f53b2a', '#b46238', '#2dfff6', '#a82b89', '#1a8011', '#436a9f', '#1a806a',\r\n    '#4cf09d', '#c188a2', '#67eb4b', '#b308d3', '#fc7e41', '#af3101', '#ff065',\r\n    '#71b1f4', '#a2f8a5', '#e23dd0', '#d3486d', '#00f7f9', '#474893', '#3cec35',\r\n    '#1c65cb', '#5d1d0c', '#2d7d2a', '#ff3420', '#5cdd87', '#a259a4', '#e4ac44',\r\n    '#1bede6', '#8798a4', '#d7790f', '#b2c24f', '#de73c2', '#d70a9c', '#25b67',\r\n    '#88e9b8', '#c2b0e2', '#86e98f', '#ae90e2', '#1a806b', '#436a9e', '#0ec0ff',\r\n    '#f812b3', '#b17fc9', '#8d6c2f', '#d3277a', '#2ca1ae', '#9685eb', '#8a96c6',\r\n    '#dba2e6', '#76fc1b', '#608fa4', '#20f6ba', '#07d7f6', '#dce77a', '#77ecca'];\r\n  \r\n    // private hexToRgb(hex: string) {\r\n    //   // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    //   var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    //   hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n    //     return r + r + g + g + b + b;\r\n    //   });\r\n    \r\n    //   var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    //   return result ? {\r\n    //     r: parseInt(result[1], 16),\r\n    //     g: parseInt(result[2], 16),\r\n    //     b: parseInt(result[3], 16)\r\n    //   } : null;\r\n    // }\r\n  \r\n    private nodeTypeToColorMap: any = {};\r\n    private indexIntoColors: number = 2;\r\n    private highlightColor: any = {\r\n      border: this.colors[0],\r\n      background: this.colors[1]\r\n    };\r\n\r\n    private getColorsForType(type: string): any {\r\n      if(this.nodeTypeToColorMap[type]){\r\n        return this.nodeTypeToColorMap[type];\r\n      }\r\n        if(this.indexIntoColors + 1 >= this.colors.length) {\r\n            console.log('exceeded available colors');\r\n            this.indexIntoColors = 2;\r\n        }\r\n        this.nodeTypeToColorMap[type] = {\r\n            border: this.colors[this.indexIntoColors++],\r\n            background: this.colors[this.indexIntoColors++]\r\n        }\r\n      \r\n      return this.nodeTypeToColorMap[type];\r\n    }\r\n  \r\n    public getColorForNode(node: any): any {\r\n      var type = node.id.split('-')[0];\r\n      var colors = this.getColorsForType(type);\r\n      return {\r\n        border: colors.border,\r\n        background: colors.background,\r\n        highlight: this.highlightColor\r\n      }\r\n    }\r\n}\r\n\r\nexport default new ColorMapper();","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {Typeahead} from 'react-bootstrap-typeahead';\r\nimport ReactJson from 'react-json-view'\r\nimport './App.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport Graph from 'vis-react';\r\nimport ColorMapper from './colorMapper';\r\n\r\nconst shortid = require('shortid');\r\n\r\nfunction App() {\r\n  var cachedPredicates = localStorage.getItem('predicates');\r\n  if(cachedPredicates){\r\n    cachedPredicates = cachedPredicates.split(\",\");\r\n  }\r\n  const [predicates, setPredicates] = React.useState(cachedPredicates || ['type', 'id']);\r\n  const [operations, setOperations] = React.useState(['eq', 'ge', 'gt', 'le', 'lt', 'ne']);\r\n  const [hostUrl, setHostUrl] = React.useState(localStorage.getItem('hostUrl') || '');\r\n  const [storeId, setStoreId] = React.useState(localStorage.getItem('storeId') || '');\r\n  const [filters, setFilters] = React.useState([\r\n    {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }\r\n  ]);\r\n  const [outgoings, setOutgoings] = React.useState([\r\n    {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      level: 0,\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }\r\n  ]);\r\n  const [incomings, setIncomings] = React.useState([\r\n    {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      level: 0,\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }\r\n  ]);\r\n  const [jsonResponse, setJsonResponse] = React.useState({});\r\n  const [showJson, setShowJson] = React.useState(false);\r\n  const [showGraph, setShowGraph] = React.useState(true);\r\n  const [showConnectionInfo, setShowConnectionInfo] = React.useState(true);\r\n  const [showFilters, setShowFilters] = React.useState(true);\r\n  const [showOutgoing, setShowOutgoing] = React.useState(false);\r\n  const [showIncoming, setShowIncoming] = React.useState(false);\r\n  const [values, setValues] = React.useState([]);\r\n  const [showAggregates, setShowAggregates] = React.useState(false);\r\n  const [countAggregate, setCountAggregate] = React.useState(false);\r\n  const [colorNodes, setColorNodes] = React.useState(true);\r\n\r\n  function handleFilterFormChange(e, currentFilter) {\r\n    setFilters(filters.map(f => f.id === currentFilter.id ? {...f, value: e.target && e.target.value} : f));\r\n  } \r\n\r\n  function handleDeleteFilterForm(currentFilter) {\r\n    setFilters(filters.filter(f => f.id !== currentFilter.id));\r\n  }\r\n\r\n  function handleTypeaheadFilterSelection(selected, currentFilter, typeahead){\r\n    setFilters(filters.map(f => f.id === currentFilter.id ? {...f, [typeahead]: selected.length && selected[0]} : f));\r\n  }\r\n\r\n  function handleTypeaheadFilterChange(val, currentFilter, typeahead){\r\n    setFilters(filters.map(f => f.id === currentFilter.id ? {...f, [typeahead]: val} : f));\r\n  }\r\n\r\n  function renderFilters() {\r\n    var filterGroups = [];\r\n    for(var filter of filters) {\r\n      filterGroups.push(<InputGroup className=\"input-group\">\r\n      <Typeahead\r\n          id={filter.id + \"predicate\"}\r\n          labelKey=\"predicate\"\r\n          multiple={false}\r\n          options={predicates}\r\n          placeholder=\"Choose a predicate\"\r\n          className=\"Typeahead\"\r\n          value={filter.predicate}\r\n          allowNew={true}\r\n          onChange={((currentFilter) => (selected) => handleTypeaheadFilterSelection(selected, currentFilter, 'predicate'))(filter)}\r\n          onInputChange={((currentFilter) => (val) => handleTypeaheadFilterChange(val, currentFilter, 'predicate'))(filter)}\r\n        />\r\n        <Typeahead\r\n          id={filter.id + \"operation\"}\r\n          labelKey=\"operation\"\r\n          multiple={false}\r\n          options={operations}\r\n          placeholder=\"Choose an operation\"\r\n          className=\"Typeahead\"\r\n          value={filter.operation}\r\n          onChange={((currentFilter) => (selected) => handleTypeaheadFilterSelection(selected, currentFilter, 'operation'))(filter)}\r\n          onInputChange={((currentFilter) => (val) => handleTypeaheadFilterChange(val, currentFilter, 'operation'))(filter)}\r\n        ></Typeahead>\r\n        <FormControl\r\n          placeholder=\"value\"\r\n          aria-label=\"value\"\r\n          value={filter.value}\r\n          onChange={((currentFilter) => (e) => handleFilterFormChange(e, currentFilter))(filter)}\r\n        />\r\n        <Button variant=\"danger\" onClick={((currentFilter) => () => handleDeleteFilterForm(currentFilter))(filter)}>X</Button>\r\n    </InputGroup>)\r\n    }\r\n    return <>\r\n    {filterGroups}\r\n    </>;\r\n  }\r\n\r\n  function handleOutgoingFilterFormChange(e, currentOutgoing, currentFilter) {\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, value: e.target && e.target.value}\r\n        : f) }}\r\n      : o))\r\n  } \r\n\r\n  function handleOutgoingDeleteFilterForm(currentOutgoing, currentFilter) {\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.filter(f => f.id !== currentFilter.id)}}\r\n      : o))\r\n  }\r\n\r\n  function handleOutgoingDeleteForm(currentOutgoing) {\r\n    setOutgoings(outgoings.filter(o => o.id !== currentOutgoing.id));\r\n  }\r\n\r\n  function handleOutgoingTypeaheadFilterSelection(selected, currentOutgoing, currentFilter, typeahead){\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: selected.length && selected[0]}\r\n        : f) }} \r\n      : o));\r\n  }\r\n\r\n  function handleOutgoingTypeaheadFilterChange(val, currentOutgoing, currentFilter, typeahead){\r\n    setOutgoings(outgoings.map(o => o.id === currentOutgoing.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: val}\r\n        : f) }}\r\n      : o));\r\n  }\r\n\r\n  function renderOutgoings() {\r\n    var outgoingGroups = [];\r\n    for(var outgoing of outgoings) {\r\n      var filterGroups = [];\r\n      if (!outgoing.target) continue;\r\n      for(var filter of outgoing.target.filters) {\r\n        filterGroups.push(<InputGroup className=\"input-group\">\r\n          <Typeahead\r\n              id={filter.id + \"predicate-outgoing\"}\r\n              labelKey=\"predicate\"\r\n              multiple={false}\r\n              options={predicates}\r\n              placeholder=\"Choose a predicate\"\r\n              className=\"Typeahead\"\r\n              value={filter.predicate}\r\n              allowNew={true}\r\n              onChange={((currentOutgoing, currentFilter) =>\r\n                (selected) => handleOutgoingTypeaheadFilterSelection(selected, currentOutgoing, currentFilter, 'predicate'))(outgoing, filter)}\r\n              onInputChange={((currentOutgoing, currentFilter) =>\r\n                (val) => handleOutgoingTypeaheadFilterChange(val, currentOutgoing, currentFilter, 'predicate'))(outgoing, filter)}\r\n            />\r\n            <Typeahead\r\n              id={filter.id + \"operation-outgoing\"}\r\n              labelKey=\"operation\"\r\n              multiple={false}\r\n              options={operations}\r\n              placeholder=\"Choose an operation\"\r\n              className=\"Typeahead\"\r\n              value={filter.operation}\r\n              onChange={((currentOutgoing, currentFilter) =>\r\n                (selected) => handleOutgoingTypeaheadFilterSelection(selected, currentOutgoing, currentFilter, 'operation'))(outgoing, filter)}\r\n              onInputChange={((currentOutgoing, currentFilter) =>\r\n                (val) => handleOutgoingTypeaheadFilterChange(val, currentOutgoing, currentFilter, 'operation'))(outgoing, filter)}\r\n            ></Typeahead>\r\n            <FormControl\r\n              placeholder=\"value\"\r\n              aria-label=\"value\"\r\n              value={filter.value}\r\n              onChange={((currentOutgoing, currentFilter) => (e) => handleOutgoingFilterFormChange(e, currentOutgoing, currentFilter))(outgoing, filter)}\r\n            />\r\n            <Button variant=\"danger\" onClick={((currentOutgoing, currentFilter) => () => handleOutgoingDeleteFilterForm(currentOutgoing, currentFilter))(outgoing, filter)}>X</Button>\r\n          </InputGroup>);\r\n      }\r\n      outgoingGroups.push(<div className=\"section\">\r\n      <Form.Label>\r\n        Path\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"path\"\r\n        aria-label=\"path\"\r\n        value={outgoing.path}\r\n        onChange={((currentOutgoing) => (e) => setOutgoings(outgoings.map(o => o.id === currentOutgoing.id ? {...o, path: e.target && e.target.value} : o)))(outgoing)}\r\n      />\r\n      <Form.Label>\r\n        Level\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"level\"\r\n        aria-label=\"level\"\r\n        value={outgoing.level}\r\n        onChange={((currentOutgoing) => (e) => setOutgoings(outgoings.map(o => o.id === currentOutgoing.id ? {...o, level: e.target && e.target.value} : o)))(outgoing)}\r\n      />\r\n      <Form.Label>\r\n        Filters:\r\n      </Form.Label>\r\n      {filterGroups}\r\n      <div className=\"action-button\">\r\n            <Button variant=\"info\" onClick={((currentOutgoing) => () => addOutgoingFilter(currentOutgoing.id))(outgoing)}>Add Filter</Button>\r\n            <Button variant=\"danger\" onClick={((currentOutgoing) => () => handleOutgoingDeleteForm(currentOutgoing))(outgoing)}>Remove</Button>\r\n        </div>\r\n      </div>);\r\n    }\r\n    return <>\r\n    {outgoingGroups}\r\n    </>;\r\n  }\r\n\r\n  function addFilter(){\r\n    setFilters([...filters, {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }]);\r\n  }\r\n\r\n  function addOutgoing(){\r\n    setOutgoings([...outgoings, {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }]);\r\n  }\r\n\r\n  function addOutgoingFilter(id){\r\n    var updatedOutgoing = outgoings.filter(o => o.id === id)[0];\r\n    updatedOutgoing.target.filters = [...updatedOutgoing.target.filters, {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }];\r\n    setOutgoings(outgoings.map(o => o.id === id ? updatedOutgoing : o));\r\n  }\r\n\r\n  function addIncoming(){\r\n    setIncomings([...incomings, {\r\n      id: shortid.generate(),\r\n      path: '*',\r\n      target: {\r\n        filters: [\r\n          {\r\n            id: shortid.generate(),\r\n            predicate: '',\r\n            operation: '',\r\n            value: ''\r\n          }\r\n        ] \r\n      }\r\n    }]);\r\n  }\r\n\r\n  function addIncomingFilter(id){\r\n    var updatedIncoming = incomings.filter(i => i.id === id)[0];\r\n    updatedIncoming.target.filters = [...updatedIncoming.target.filters, {\r\n      id: shortid.generate(),\r\n      predicate: '',\r\n      operation: '',\r\n      value: ''\r\n    }];\r\n    setIncomings(incomings.map(i => i.id === id ? updatedIncoming : i));\r\n  }\r\n\r\n  function handleIncomingFilterFormChange(e, currentIncoming, currentFilter) {\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, value: e.target && e.target.value}\r\n        : f) }}\r\n      : o))\r\n  } \r\n\r\n  function handleIncomingDeleteFilterForm(currentIncoming, currentFilter) {\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ?  {...o, target: {...o.target, filters: o.target.filters.filter(f => f.id !== currentFilter.id)}}\r\n      : o))\r\n  }\r\n\r\n  function handleIncomingDeleteForm(currentIncoming) {\r\n    setIncomings(incomings.filter(o => o.id !== currentIncoming.id));\r\n  }\r\n\r\n  function handleIncomingTypeaheadFilterSelection(selected, currentIncoming, currentFilter, typeahead){\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: selected.length && selected[0]}\r\n        : f) }} \r\n      : o));\r\n  }\r\n\r\n  function handleIncomingTypeaheadFilterChange(val, currentIncoming, currentFilter, typeahead){\r\n    setIncomings(incomings.map(o => o.id === currentIncoming.id\r\n      ? {...o, target: {...o.target, filters: o.target.filters.map(f => f.id === currentFilter.id \r\n        ? {...f, [typeahead]: val}\r\n        : f) }}\r\n      : o));\r\n  }\r\n\r\n  function renderIncomings() {\r\n    var incomingGroups = [];\r\n    for(var incoming of incomings) {\r\n      var filterGroups = [];\r\n      if (!incoming.target) continue;\r\n      for(var filter of incoming.target.filters) {\r\n        filterGroups.push(<InputGroup className=\"input-group\">\r\n          <Typeahead\r\n              id={filter.id + \"predicate-incoming\"}\r\n              labelKey=\"predicate\"\r\n              multiple={false}\r\n              options={predicates}\r\n              placeholder=\"Choose a predicate\"\r\n              className=\"Typeahead\"\r\n              value={filter.predicate}\r\n              allowNew={true}\r\n              onChange={((currentIncoming, currentFilter) =>\r\n                (selected) => handleIncomingTypeaheadFilterSelection(selected, currentIncoming, currentFilter, 'predicate'))(incoming, filter)}\r\n              onInputChange={((currentIncoming, currentFilter) =>\r\n                (val) => handleIncomingTypeaheadFilterChange(val, currentIncoming, currentFilter, 'predicate'))(incoming, filter)}\r\n            />\r\n            <Typeahead\r\n              id={filter.id + \"operation-incoming\"}\r\n              labelKey=\"operation\"\r\n              multiple={false}\r\n              options={operations}\r\n              placeholder=\"Choose an operation\"\r\n              className=\"Typeahead\"\r\n              value={filter.operation}\r\n              onChange={((currentIncoming, currentFilter) =>\r\n                (selected) => handleIncomingTypeaheadFilterSelection(selected, currentIncoming, currentFilter, 'operation'))(incoming, filter)}\r\n              onInputChange={((currentIncoming, currentFilter) =>\r\n                (val) => handleIncomingTypeaheadFilterChange(val, currentIncoming, currentFilter, 'operation'))(incoming, filter)}\r\n            ></Typeahead>\r\n            <FormControl\r\n              placeholder=\"value\"\r\n              aria-label=\"value\"\r\n              value={filter.value}\r\n              onChange={((currentIncoming, currentFilter) => (e) => handleIncomingFilterFormChange(e, currentIncoming, currentFilter))(incoming, filter)}\r\n            />\r\n            <Button variant=\"danger\" onClick={((currentIncoming, currentFilter) => () => handleIncomingDeleteFilterForm(currentIncoming, currentFilter))(incoming, filter)}>X</Button>\r\n          </InputGroup>);\r\n      }\r\n      incomingGroups.push(<div className=\"section\">\r\n      <Form.Label>\r\n        Path\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"path\"\r\n        aria-label=\"path\"\r\n        value={incoming.path}\r\n        onChange={((currentIncoming) => (e) => setIncomings(incomings.map(o => o.id === currentIncoming.id ? {...o, path: e.target && e.target.value} : o)))(incoming)}\r\n      />\r\n      <Form.Label>\r\n        Level\r\n      </Form.Label>\r\n      <Form.Control\r\n        className=\"path-input\"\r\n        placeholder=\"level\"\r\n        aria-label=\"level\"\r\n        value={incoming.level}\r\n        onChange={((currentIncoming) => (e) => setIncomings(incomings.map(o => o.id === currentIncoming.id ? {...o, level: e.target && e.target.value} : o)))(incoming)}\r\n      />\r\n      <Form.Label>\r\n        Filters:\r\n      </Form.Label>\r\n      {filterGroups}\r\n      <div className=\"action-button\">\r\n            <Button variant=\"info\" onClick={((currentIncoming) => () => addIncomingFilter(currentIncoming.id))(incoming)}>Add Filter</Button>\r\n            <Button variant=\"danger\" onClick={((currentIncoming) => () => handleIncomingDeleteForm(currentIncoming))(incoming)}>Remove</Button>\r\n        </div>\r\n      </div>);\r\n    }\r\n    return <>\r\n    {incomingGroups}\r\n    </>;\r\n  }\r\n\r\n  async function setConnection() {\r\n    console.log(hostUrl);\r\n    const response =\r\n      await axios.get(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/predicates`);\r\n    console.log(response.data);\r\n    var predicates = response.data.values;\r\n    if(!predicates.includes('id')){\r\n      predicates = [...predicates, 'id'];\r\n    }\r\n    setPredicates(predicates);\r\n    localStorage.setItem('hostUrl', hostUrl);\r\n    localStorage.setItem('storeId', storeId);\r\n    localStorage.setItem('predicates', predicates);\r\n  }\r\n\r\n  function anyValidOutgoings() {\r\n    for(var outgoing of outgoings) {\r\n      if(outgoing.target && outgoing.target.filters && outgoing.target.filters.some((filter) => filter.predicate && filter.operation && filter.value)) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function anyValidIncomings() {\r\n    for(var incoming of incomings) {\r\n      if(incoming.target && incoming.target.filters && incoming.target.filters.some((filter) => filter.predicate && filter.operation && filter.value)) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function tryParseInt(str,defaultValue = 0) {\r\n    var retValue = defaultValue;\r\n    if(str) {\r\n      if (!isNaN(str)) {\r\n          retValue = parseInt(str);\r\n      }\r\n    }\r\n    return retValue;\r\n  }\r\n\r\n  function tryParseFloat(str,defaultValue = 0) {\r\n    var retValue = defaultValue;\r\n    if(str) {\r\n      if (!isNaN(str)) {\r\n          retValue = parseFloat(str);\r\n      }\r\n    }\r\n    return retValue;\r\n  }\r\n  \r\n\r\n\r\n  async function runQuery(e, continuation) {\r\n    console.log(filters);\r\n    console.log(outgoings);\r\n    var body = { filter: {}};\r\n    var id = null;\r\n    for(var filter of filters){\r\n      if(filter.predicate === 'id' && filter.operation === 'eq' && filter.value) {\r\n        id = filter.value;\r\n      }\r\n      body.filter[filter.predicate] = { \r\n        op: filter.operation,\r\n        value: filter.value\r\n      }\r\n      // convert strings to bools\r\n      if (body.filter[filter.predicate].value === \"true\") {\r\n        body.filter[filter.predicate].value = true;\r\n      }\r\n      if (body.filter[filter.predicate].value === \"false\") {\r\n        body.filter[filter.predicate].value = false;\r\n      }\r\n      if (!isNaN(parseFloat(body.filter[filter.predicate].value))) {\r\n        body.filter[filter.predicate].value = parseFloat(body.filter[filter.predicate].value);\r\n      }\r\n    }\r\n\r\n    if (anyValidOutgoings()){\r\n      body.outgoing = [];\r\n      for(var outgoing of outgoings) {\r\n        var newOutgoing = {\r\n          path: outgoing.path,\r\n          level: outgoing.level,\r\n          target: {\r\n            filter: {}\r\n          }\r\n        };\r\n        if (outgoing.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq' && f.value).length) {\r\n            delete newOutgoing.target.filter;\r\n            newOutgoing.target = {id: outgoing.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq')[0].value}\r\n        } \r\n        else {\r\n          for(var filter of outgoing.target.filters) {\r\n            newOutgoing.target.filter[filter.predicate] = { \r\n              op: filter.operation,\r\n              value: filter.value\r\n            }\r\n            // convert strings to bools\r\n            if (newOutgoing.target.filter[filter.predicate].value === \"true\") {\r\n              newOutgoing.target.filter[filter.predicate].value = true;\r\n            }\r\n            if (newOutgoing.target.filter[filter.predicate].value === \"false\") {\r\n              newOutgoing.target.filter[filter.predicate].value = false;\r\n            }\r\n            if (!isNaN(parseFloat(newOutgoing.target.filter[filter.predicate].value))) {\r\n              newOutgoing.target.filter[filter.predicate].value = parseFloat(newOutgoing.target.filter[filter.predicate].value);\r\n            }\r\n            newOutgoing.level = tryParseInt(newOutgoing.level);\r\n          }\r\n        }\r\n        body.outgoing.push(newOutgoing)\r\n      }\r\n    }\r\n\r\n    if (anyValidIncomings()){\r\n      body.incoming = [];\r\n      for(var incoming of incomings) {\r\n        var newIncoming = {\r\n          path: incoming.path,\r\n          level: incoming.level,\r\n          target: {\r\n            filter: {}\r\n          }\r\n        };\r\n        if (incoming.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq' && f.value).length) {\r\n          delete newIncoming.target.filter;\r\n          newIncoming.target = {id: incoming.target.filters.filter(f => f.predicate === 'id' && f.operation === 'eq')[0].value}\r\n        }  \r\n        else {\r\n          for(var filter of incoming.target.filters) {\r\n            newIncoming.target.filter[filter.predicate] = { \r\n              op: filter.operation,\r\n              value: filter.value\r\n            }\r\n            // convert strings to bools\r\n            if (newIncoming.target.filter[filter.predicate].value === \"true\") {\r\n              newIncoming.target.filter[filter.predicate].value = true;\r\n            }\r\n            if (newIncoming.target.filter[filter.predicate].value === \"false\") {\r\n              newIncoming.target.filter[filter.predicate].value = false;\r\n            }\r\n            if (!isNaN(parseFloat(newIncoming.target.filter[filter.predicate].value))) {\r\n              newIncoming.target.filter[filter.predicate].value = parseFloat(newIncoming.target.filter[filter.predicate].value);\r\n            }\r\n            newIncoming.level = tryParseInt(newIncoming.level);\r\n          }\r\n        }\r\n        body.incoming.push(newIncoming)\r\n      }\r\n    }\r\n    if(continuation) {\r\n      body.continuation = jsonResponse['continuation'];\r\n    }\r\n    if(countAggregate) {\r\n      body.aggregates = [{type : \"count\"}];\r\n    }\r\n\r\n    console.log(body);\r\n    setShowGraph(true);\r\n    const response = id ? await axios.get(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/${id}`) :\r\n      await axios.post(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/query`, body);\r\n    console.log(response);\r\n    var newJson = continuation ? {...response.data, values: [...jsonResponse.values, ...response.data.values]} : response.data;\r\n    setJsonResponse(newJson);\r\n\r\n    var newNodes = [];\r\n    var newEdges = [];\r\n    for(var node of newJson.values) {\r\n      var newNode = {id: node.id, label: node.id, title: node.id};\r\n      if (colorNodes) {\r\n        newNode['color'] = ColorMapper.getColorForNode(node);\r\n      }\r\n      newNodes.push(newNode);\r\n      const toAdd = tryAddNodeToGraph(node);\r\n      newNodes = [...newNodes, ...toAdd.nodes];\r\n      newEdges = [...newEdges, ...toAdd.edges];\r\n    }\r\n    setShowGraph(true);\r\n    setGraph({nodes: newNodes, edges: newEdges});\r\n\r\n    setShowJson(true);\r\n  }\r\n\r\n  function tryAddNodeToGraph(node){\r\n    var nodes = [];\r\n    var edges = [];\r\n    for(var propertyKey in node){\r\n      var property = node[propertyKey];\r\n      if(property === null) return { nodes, edges};\r\n      if (Array.isArray(property)){\r\n        for(var item of property){\r\n          if (!item.id) continue;\r\n          var newNode = {id: item.id, label: item.id, title: item.id};\r\n          if (colorNodes) {\r\n            newNode['color'] = ColorMapper.getColorForNode(item);\r\n          }\r\n          nodes.push(newNode)\r\n          edges.push({id: `${node.id}-to-${item.id}`, from: node.id, to: item.id})\r\n        }\r\n      }\r\n      else if (typeof property === 'object'){\r\n        if (!property.id) continue;\r\n        var newNode = {id: property.id, label: property.id, title: property.id};\r\n        if (colorNodes) {\r\n          newNode['color'] = ColorMapper.getColorForNode(property);\r\n        }\r\n        nodes.push(newNode)\r\n        edges.push({id: `${node.id}-to-${property.id}`, from: node.id, to: property.id})\r\n      }\r\n    }\r\n    return {nodes, edges};\r\n  }\r\n\r\n  function redrawGraph(useColor) {\r\n    var edges = [];\r\n    var newNodes = [];\r\n    for(var node of graph.nodes) {\r\n      var newNode = {id: node.id, label: node.id, title: node.id};\r\n      if (useColor) {\r\n        newNode['color'] = ColorMapper.getColorForNode(node);\r\n      }\r\n      newNodes.push(newNode);\r\n    }\r\n    for(var edge of graph.edges){\r\n      edges.push(edge);\r\n    }\r\n    setGraph({\r\n      nodes: [\r\n      ],\r\n      edges: [\r\n      ]\r\n    });\r\n    setTimeout(() => {\r\n      setShowGraph(true);\r\n      setGraph({...graph, nodes: newNodes, edges});\r\n    }, 1);\r\n  }\r\n\r\n  async function nodeSelected(selected) {\r\n    console.log(selected);\r\n    if(selected.name === 'id') {\r\n      var nodeToUpdate = jsonResponse;\r\n      for(var i of selected.namespace){\r\n        nodeToUpdate = nodeToUpdate[i];\r\n      }\r\n\r\n      const response = await axios.get(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/${encodeURIComponent(selected.value)}`);\r\n      console.log(response);\r\n      var graphUpdate = tryAddNodeToGraph(response.data);\r\n      setGraph({nodes: [...graph.nodes, ...graphUpdate.nodes], edges: [...graph.edges, ...graphUpdate.edges]});\r\n\r\n      nodeToUpdate = {...nodeToUpdate, ...response.data};\r\n      for(var i = selected.namespace.length - 1; i >= 0; i--){\r\n        var parentNode = jsonResponse;\r\n        for(var j = 0; j < i; j++){\r\n          parentNode = parentNode[selected.namespace[j]];\r\n        }\r\n        parentNode[selected.namespace[i]] = nodeToUpdate;\r\n        nodeToUpdate = parentNode;\r\n      }\r\n      setJsonResponse(JSON.parse(JSON.stringify(nodeToUpdate)));\r\n    }\r\n    if(selected.namespace && selected.namespace.length === 1 && selected.namespace[0] === 'continuation'){\r\n      runQuery(null, jsonResponse.continuation);\r\n    }\r\n  }\r\n\r\nconst [graph, setGraph] = React.useState({\r\n  nodes: [\r\n  ],\r\n  edges: [\r\n  ]\r\n});\r\n\r\nvar events = {\r\n  select: async function(event) {\r\n      var { nodes, edges } = event;\r\n      console.log(event);\r\n      if(!nodes.length) return;\r\n      const response = await axios.get(`${hostUrl}/api/store/${encodeURIComponent(storeId)}/${encodeURIComponent(nodes[0])}`);\r\n      console.log(response);\r\n      var graphUpdate = tryAddNodeToGraph(response.data);\r\n      setGraph({nodes: [...graph.nodes, ...graphUpdate.nodes], edges: [...graph.edges, ...graphUpdate.edges]});\r\n      setJsonResponse(JSON.parse(JSON.stringify(response.data)));\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Jumbotron>\r\n        <h1>\r\n          HexDb Query Builder\r\n        </h1>\r\n      </Jumbotron>\r\n      <div className=\"connection-info\">\r\n        <h5 className=\"section-title\" onClick={() => setShowConnectionInfo(!showConnectionInfo)}>\r\n          Connection Info\r\n        </h5>\r\n        <Collapse in={showConnectionInfo}>\r\n          <div>\r\n            <Form className=\"section\">\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Host Url</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"https://YourHost:YourPort\" value={hostUrl} onChange={(e) => setHostUrl(e.target.value)}/>\r\n                <Form.Label>Store Id</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"abc123\" value={storeId} onChange={(e) => setStoreId(e.target.value)}/>\r\n              </Form.Group>\r\n            </Form>\r\n            <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={setConnection}>Set Connection</Button>\r\n            </div>\r\n          </div>\r\n      </Collapse>\r\n      </div>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowFilters(!showFilters)}>\r\n        Filters\r\n      </h5>\r\n      <Collapse in={showFilters}>\r\n        <div>\r\n          {renderFilters()}\r\n          <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={addFilter}>Add Filter</Button>\r\n          </div>\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowOutgoing(!showOutgoing)}>\r\n        Outgoing\r\n      </h5>\r\n      <Collapse in={showOutgoing}>\r\n        <div>\r\n          {renderOutgoings()}\r\n          <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={addOutgoing}>Add Outgoing</Button>\r\n          </div>\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowIncoming(!showIncoming)}>\r\n        Incoming\r\n      </h5>\r\n      <Collapse in={showIncoming}>\r\n        <div>\r\n          {renderIncomings()}\r\n          <div className=\"action-button\">\r\n              <Button variant=\"info\" onClick={addIncoming}>Add Incoming</Button>\r\n          </div>\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <h5 className=\"section-title\" onClick={() => setShowAggregates(!showAggregates)}>\r\n        Aggregates\r\n      </h5>\r\n      <Collapse in={showAggregates}>\r\n        <div className=\"section\">\r\n        <Form.Check \r\n          type='switch'\r\n          checked={countAggregate}\r\n          onChange={() => setCountAggregate(!countAggregate)}\r\n          id={`aggregates-count-switch`}\r\n          name='aggregates-switch'\r\n          label={`Count`}\r\n        />\r\n        </div>\r\n      </Collapse>\r\n      <hr/>\r\n      <div className=\"action-button\">\r\n        <Button variant=\"primary\" onClick={runQuery}>Run Query</Button>\r\n      </div>\r\n      <hr/>\r\n      <div>\r\n        <h5 className=\"section-title\" onClick={() => setShowGraph(!showGraph)}>\r\n          Query Response Graph\r\n        </h5>\r\n          <Collapse in={showGraph}>\r\n          <div className=\"section query-response\">\r\n          {/* <Button variant=\"danger\" onClick={expandAll}>Expand All (DANGER)</Button> */}\r\n          <Form.Check \r\n            type='switch'\r\n            checked={colorNodes}\r\n            onChange={() => {\r\n              setColorNodes(!colorNodes);\r\n              redrawGraph(!colorNodes);\r\n            }}\r\n            id={`colornode-switch`}\r\n            name='colornode-switch'\r\n            label={`Color Nodes`}\r\n          />\r\n          <Graph\r\n                graph={graph}\r\n                options={{\r\n                  configure: {\r\n                    enabled: false,\r\n                    filter: 'physics',\r\n                    showButton: false\r\n                  },\r\n                  layout: {\r\n                    // hierarchical: {\r\n                    //   enabled: true,\r\n                    //   nodeSpacing: 425,\r\n                    //   blockShifting: false,\r\n                    //   edgeMinimization: false,\r\n                    //   sortMethod: \"directed\"\r\n                    // },\r\n                    hierarchical: false,\r\n                    improvedLayout: true,\r\n                },\r\n                physics: {\r\n                  enabled: true,\r\n                  forceAtlas2Based: {\r\n                    gravitationalConstant: -146,\r\n                    centralGravity: 0.01,\r\n                    springConstant: 0.1,\r\n                    springLength: 30,\r\n                    damping: 1,\r\n                    avoidOverlap: 0.36\r\n                  },\r\n                  maxVelocity: 140,\r\n                  minVelocity: 1.87,\r\n                  solver: 'forceAtlas2Based',\r\n                  adaptiveTimestep: true,\r\n                  stabilization: true\r\n                },\r\n                nodes: {\r\n                  fixed: false,\r\n                  // scaling: {\r\n                  //   label: true\r\n                  // },\r\n                  shape: 'dot',\r\n                  shapeProperties : {\r\n                    interpolation: false\r\n                  }\r\n                },\r\n                edges: {\r\n                  smooth: {\r\n                    enabled: true,\r\n                    type: \"continuous\",\r\n                    roundness: 0.5\r\n                  }\r\n                },\r\n                manipulation: false,\r\n                interaction:{\r\n                  dragNodes:false,\r\n                  dragView: true\r\n                }\r\n                  // autoResize: true,\r\n                  // height: '100%',\r\n                  // width: '100%',\r\n                  // locale: 'en',\r\n                  // clickToUse: false,\r\n                }\r\n                }\r\n                events={events}\r\n                style={ { width: \"100%\", height: \"1500px\" }}\r\n                // getNetwork={getNetwork}\r\n                // getEdges={getEdges}\r\n                // getNodes={getNodes}\r\n                // vis={vis => (this.vis = vis)}\r\n            />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n      <hr/>\r\n      <div>\r\n        <h5 className=\"section-title\" onClick={() => setShowJson(!showJson)}>\r\n          Query Response JSON\r\n        </h5>\r\n        <Collapse in={showJson}>\r\n          <div className=\"section query-response\">\r\n            <ReactJson src={jsonResponse} onSelect={nodeSelected}></ReactJson>\r\n            {/* <pre>{jsonResponse}</pre> */}\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n      <hr/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}